MPASM  5.51                           EXO.ASM   5-26-2020  15:23:18         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 #include <p16f628a.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F628A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00385         LIST
                      00002         list p=16f628a
2007   3FE1           00003         __CONFIG _CP_OFF&_WDT_OFF&_PWRTE_ON&_XT_OSC
                      00004 
  00000020            00005 dlit1_h equ 20h ;длительность
  00000021            00006 dlit1_l equ 21h ;при 1-м захвате
  00000022            00007 dlit2_h equ 22h ;длительность
  00000023            00008 dlit2_l equ 23h ;при 2-м захвате
  00000024            00009 BitZ equ 24h    ;регистр для определения знака
  00000025            00010 Flag equ 25h    ;флаг для прерывания и обработки рез-тов
  00000026            00011 Mnoj equ 26h ;Множитель 72
  00000027            00012 del_l equ 27h ;Делитель 1000
  00000031            00013 del_h equ 31h ;Делитель
  00000028            00014 dlit2_hh equ 28h ;Младший байт резултата
  00000029            00015 Rez_LL equ 29h ;Старший байт результата
  00000030            00016 Rez_LH equ 30h 
  00000032            00017 Drob_L equ 32h
  00000033            00018 Drob_H equ 33h
                      00019 ;===== Переменные для вывода на дисплей =======
  00000044            00020 Sot equ 44h
  00000035            00021 Dec equ 35h
  00000036            00022 Edin equ 36h
  00000037            00023 drob equ 37h
  00000038            00024 del_100 equ 38h
  00000039            00025 del_10 equ 39h
  0000003A            00026 Sot_h equ 3Ah
  00000045            00027 Prom_h equ 45h
  00000046            00028 Prom_l equ 46h
                      00029 
                      00030 
                      00031 
                      00032 
0000                  00033         ORG     0x000
0000   2814           00034         GOTO MAIN
0004                  00035         ORG 0x04
                      00036         ;======================================================
                      00037         ;                       ДЕЙСТВИЕ ВО ВРЕМЯ ПРЕРЫВАНИЯ
                      00038         ;======================================================
                      00039         ;---------------------------------------
                      00040 
0004   0BA5           00041         decfsz Flag,F ; Flag-1 Результат сохраняется в Flag.
0005   280D           00042         goto WRITE_1 ; Если результат не 0, то производится 1-я перезапись.
                      00043         ; Если результат =0, то производится 2-я перезапись.
                      00044         
MPASM  5.51                           EXO.ASM   5-26-2020  15:23:18         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00045         ;--------------------------------------------------------------
                      00046         ;                        2-я перезапись (копирование).
                      00047         ;--------------------------------------------------------------
0006   0815           00048         movf CCPR1L,W ; Содержимое регистра CCPR1L
0007   00A3           00049         movwf dlit2_l ; копируется в регистр dlit2_l.
0008   0816           00050         movf CCPR1H,W ; Содержимое регистра CCPR1H
0009   00A2           00051         movwf dlit2_h ; копируется в регистр dlit2_h.
000A   1503           00052         bsf STATUS,Z ; Установка признака конца замера периода.
000B   110C           00053         bcf PIR1,CCP1IF ; Сброс флага CCP1IF.
000C   0009           00054         retfie ; Возврат из прерывания.
                      00055 
                      00056         ;--------------------------------------------------------------
                      00057         ;                       1-я перезапись (копирование).
                      00058         ;--------------------------------------------------------------
000D                  00059 WRITE_1 
000D   0815           00060         movf CCPR1L,W ; Содержимое регистра CCPR1L
000E   00A1           00061         movwf dlit1_l ; копируется в регистр dlit1_l.
000F   0816           00062         movf CCPR1H,W ; Содержимое регистра CCPR1H
0010   00A0           00063         movwf dlit1_h ; копируется в регистр dlit1_h.
0011   1103           00064         bcf STATUS,Z ; Установка признака продолжения замера периода.
0012   110C           00065         bcf PIR1,CCP1IF ; Сброс флага CCP1IF.
0013   0009           00066         retfie ; Возврат из прерывания.
                      00067         ;****************************************************************
                      00068 
                      00069         ;================================================
                      00070         ;                               ОСНОВНАЯ ПРОГРАММА
                      00071         ;================================================
                      00072 
0014                  00073 MAIN
0014   1683           00074         bsf STATUS,RP0 ; Переход в 1-й банк.
0015   3008           00075         movlw b'00001000' ; RB3 работает
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0016   0086           00076         movwf TRISB ; на вход остальные выход
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0017   1781           00077         bsf OPTION_REG,7 ; Выключение на время замера подтягивающих резисторов порта В.
0018   1283           00078         bcf STATUS,RP0 ; Переход в 0-й банк.
0019   1506           00079         bsf PORTB,2 ; установка 1 - "режим ожидания"
001A   3002           00080         movlw .2 ; Запись, в указатель конца замера периода,
001B   00A5           00081         movwf Flag ; количества "уходов" в прерывание.
                      00082         ;--------------------------------------
                      00083         ;                Настройка модуля TMR1.
                      00084         ;--------------------------------------
001C   3001           00085         movlw b'00000001' ; TMR1 включен, внутренний такт,
001D   0090           00086         movwf T1CON ; Кдел. предделителя = 1 1мкс.
001E   018E           00087         clrf TMR1L
001F   018F           00088         clrf TMR1H
                      00089         ;--------------------------------------
                      00090         ;                Настройка модуля CCP.
                      00091         ;--------------------------------------
0020   0197           00092         clrf CCP1CON ; Выключение модуля CCP
0021   3005           00093         movlw b'00000101' ;Захват по каждому переднему фронту
0022   0097           00094         movwf CCP1CON ; фронту сигнала на выводе RB3.
                      00095         ;--------------------------------------
MPASM  5.51                           EXO.ASM   5-26-2020  15:23:18         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00096         ;       Сброс флага нулевого результата
                      00097         ;       и флага прерываний от модуля CCP.
                      00098         ;--------------------------------------
0023   1103           00099         bcf STATUS,Z ; Подготовка флага Z к работе.
0024   110C           00100         bcf PIR1,CCP1IF ; Сброс флага CCP1IF.
                      00101         ;-----------------------------------------------------------------
                      00102         ;                       Разрешение прерываний от модуля CCP,
                      00103         ;               и разблокировка счетного входа модуля CCP.
                      00104         ;-----------------------------------------------------------------
0025   30C0           00105         movlw b'11000000' ; Глобальное разрешение прерываний и
0026   008B           00106         movwf INTCON ; разрешение прерываний от периферийных модулей.
0027   1683           00107         bsf STATUS,RP0 ; Переход в 1-й банк.
0028   3004           00108         movlw b'00000100' ; Разрешение прерываний
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0029   008C           00109         movwf PIE1 ; от модуля CCP.     
002A   1283           00110         bcf STATUS,RP0 ; Переход в 0-й банк.
                      00111 
                      00112         ;------------------------------------------------------------------     
                      00113         ;                       Инициализация работы PIC (для генерации импульсов)
                      00114         ;------------------------------------------------------------------
002B   1686           00115         bsf PORTB, 5 ;подаем 1 на ножку RB5
002C   0000           00116         nop                      ;с некой задержкой
002D   0000           00117         nop
002E   0000           00118         nop
002F   0000           00119         nop
0030   1286           00120         bcf PORTB, 5 ;затем отпускаем, при этом с другого PIC подается импульс с длит-тью 5-10 мкс
                      00121         ;--------------------------------------------------------------------------------
                      00122         ; "Плавающая" задержка с выходом из нее через 2 прерывания от модуля CCP.
                      00123         ;--------------------------------------------------------------------------------
0031   1D03           00124         btfss STATUS,Z ; Если флаг Z опущен, то ждем его поднятия.
0032   2831           00125         goto $-1 ; Если флаг Z поднялся, то программа исполняется далее(расчетная часть).
                      00126         ;--------------------------------------------------------------------------------
                      00127         ; Запрет прерываний и блокировка счетного входа модуля CCP.
                      00128         ;--------------------------------------------------------------------------------
0033   018B           00129         clrf INTCON  ; Запрет прерываний.
0034   1683           00130         bsf STATUS,RP0 ; Переход в 1-й банк.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0035   1381           00131         bcf OPTION_REG,7 ; Включение подтягивающих резисторов порта В.
0036   1283           00132         bcf STATUS,RP0 ; Переход в 0-й банк.
                      00133         ;---------------------------------------------------------
                      00134         ; в dlit1_h/dlit1_l результат 1-го замера,
                      00135         ; в dlit2_h/dlit2_h результат 2-го замера.
                      00136         ;================================================================================
                      00137         ; Обработка результатов подсчета.
                      00138         ;================================================================================
                      00139         ; Вычитание, по кольцу, Temp1_H/Temp1_L из Temp2_H/Temp2_L.
                      00140         ;---------------------------------------------------------------------
0037   1024           00141         bcf BitZ,0 ; Очистка регистра хранения бита C.
0038   0821           00142         movf dlit1_l,W ; dlit2_L - dlit1_L = ...
0039   02A3           00143         subwf dlit2_l,F ; Результат - в dlit2_L.
003A   1C03           00144         btfss STATUS,C ; Результат "+" или "-" ?
003B   1424           00145         bsf BitZ,0 ; Если "-", то в BitC,0 записывается 1.
003C   0820           00146         movf dlit1_h,W ; Если "+", то в BitC,0 "лежит" ранее
MPASM  5.51                           EXO.ASM   5-26-2020  15:23:18         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00147         ;предустановленный 0 и Temp1_H --> W.
003D   02A2           00148         subwf dlit2_h,F ; dlit2_H - dlit1_H Результат - в dlit2_H.
003E   1824           00149         btfsc BitZ,0 ; В бите №0 регистра BitC 0 или 1 ?
003F   03A2           00150         decf dlit2_h,F ; Если 1, то содержимое dlit2_H
                      00151         ; декрементируется.
                      00152         ; Если 0, то содержимое Temp2_H не декрементируется.
                      00153         ;====Окончательный результат задержки сохранен в dlit2_h dlit2_l====
                      00154         ;======================================================
                      00155 
                      00156         ;=================  Расчет глубины ======================
                      00157         ; dlit2_l dlit2_h - increment, mnoj - счетчик, Rez_L Rez_H - результат
                      00158         ;
0040   304B           00159                          movlw            .75
0041   00A6           00160                          movwf        Mnoj
0042   30E8           00161                          movlw            b'11101000'
0043   00A7           00162                          movwf        del_l
0044   3003           00163                          movlw            b'00000011'
0045   00B1           00164                          movwf        del_h
                      00165 ;===================== Операция умножения =====================
0046   01A8           00166 axb          clrf         dlit2_hh           ;очистка регистра dlit2_hh (эквивалентно записи нуля)
0047   3000           00167              movlw        .0              ;побитное исключающее "или" числа ноль и числа лежащего в  
0048   0623           00168              xorwf        dlit2_l,W         ;регистре dlit2_l: это проверка равенства нулю числа лежащег
                            о
0049   1D03           00169              btfss        STATUS,Z        ;в регистре dli2t_l
004A   284F           00170              goto         a1              ;число в регистре dlit2_l не равно нулю: переход на метку a1
004B   3000           00171              movlw        .0              ;число в регистре dlit2_l равно нулю: проверка равенства  
004C   0622           00172              xorwf        dlit2_h,W         ;нулю числа лежащего в регистре dlit2_h
004D   1903           00173              btfsc        STATUS,Z        ;
004E   0008           00174              return                       ;число в регистре dlit2_h равно нулю: выход из подпрограммы
004F   3000           00175 a1           movlw        .0              ;число в регистре dlit2_h не равно нулю: проверка равенства
0050   0626           00176              xorwf        Mnoj,W         ;нулю числа лежащего в регистре Mnoj
0051   1903           00177              btfsc        STATUS,Z        ;
0052   2866           00178              goto         a2              ;число в регистре Mnoj равно нулю: переход на метку a2
0053   0823           00179              movf         dlit2_l,W         ;число в регистре Mnoj не равно нулю: копирование чисел из
0054   00A9           00180              movwf        Rez_LL           ;из регистров dlit2_l, dlit2_h в регистры Rez_LL, Reg_LH в
0055   0822           00181              movf         dlit2_h,W         ;качестве константы для дальнейшего сложения
0056   00B0           00182              movwf        Rez_LH
0057   0BA6           00183 a4           decfsz       Mnoj,F         ;декремент (с условием) регистра Mnoj, регистр Mnoj
                      00184                                           ;выступает в качестве счетчика сложений                       
                             
0058   285A           00185              goto         a3              ;регистр Mnoj не равен нулю: переход на метку a3
0059   2869           00186              goto del                       ;регистр Mnoj равен нулю: выход из подпрограммы
                      00187                                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
005A   0829           00188 a3           movf         Rez_LL,W         ;
005B   07A3           00189              addwf        dlit2_l,F         ;
005C   1C03           00190              btfss        STATUS,C        ;
005D   2861           00191              goto         a5              ;
005E   0FA2           00192              incfsz       dlit2_h,F         ;прибавление двухбайтного числа (regLH, regLL) к трехбайтном
                            у
005F   2861           00193              goto         a5              ;числу в регистрах varHL, varLH, varLL, то есть это операция
0060   0AA8           00194              incf         dlit2_hh,F         ;сложения трехбайтного и двухбайтного числа
0061   0830           00195 a5           movf         Rez_LH,W         ;
0062   07A2           00196              addwf        dlit2_h,F         ;
MPASM  5.51                           EXO.ASM   5-26-2020  15:23:18         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0063   1803           00197              btfsc        STATUS,C        ;
0064   0AA2           00198              incf         dlit2_h,F         ;
                      00199                                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0065   2857           00200              goto         a4              ;переход на метку a4
0066   01A3           00201 a2           clrf         dlit2_l           ;очистка регистров varLL, varLH (эквивалентно записи нуля)
0067   01A2           00202              clrf         dlit2_h
0068   2869           00203              goto del                       ;выход из подпрограммы
                      00204                                           ;
                      00205 
                      00206 ;==================Операция деления======================
                      00207 ;Поскольку у нас максимальная глубина 400 см = 4 м используем всего 2 байта
                      00208 ;del_l del_h = 1000; dlit2_l dlit2_h - результат умножения на 75
                      00209                 ;clrf dlit2_l
                      00210                         ;clrf dlit2_h
                      00211                         ;clrf dlit2_hh
                      00212                         ;movlw b'10111110'
                      00213                 ;       movwf dlit2_l   
                      00214                 ;       movlw b'11101100'
                      00215                 ;       movwf dlit2_h
                      00216                 ;       movlw b'00000001'
                      00217                 ;       movwf dlit2_hh
                      00218 
0069   01A9           00219 del              clrf         Rez_LL           ;очистка регистров Rez_LL, Rez_LH (эквивалентно записи ну
                            ля)
006A   01B0           00220              clrf         Rez_LH           ;
006B   3000           00221              movlw        .0              ;проверка равенства нулю числа лежащего в регистре tmpLL
006C   0627           00222              xorwf        del_l,W         ;
006D   1D03           00223              btfss        STATUS,Z        ;
006E   2873           00224              goto         d1              ;число в регистре del_l не равно нулю: переход на метку d1
006F   3000           00225              movlw        .0              ;число в регистре del_l равно нулю: проверка равенства нулю
0070   0631           00226              xorwf        del_h,W         ;числа лежащего в регистре tmpLH
0071   1903           00227              btfsc        STATUS,Z        ;
0072   0008           00228              return                       ;число в регистре del_h равно нулю: выход из подпрограммы
                      00229                                           ;(на ноль делить нельзя)
                      00230                                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            ;;;;
0073   0823           00231 d1           movf                 dlit2_l, W
0074   00B2           00232                          movwf            Drob_L
0075   0822           00233                          movf             dlit2_h, W
0076   00B3           00234                          movwf            Drob_H
0077   0827           00235                          movf         del_l,W         ;число в del_h не равно нулю: вычитаем число лежащ
                            ее в регистрах
0078   02A3           00236              subwf        dlit2_l,F         ;del_h, del_l из числа в регистрах dlit2_h, dlit_l: это опер
                            ация
0079   1803           00237              btfsc        STATUS,C        ;вычитания двухбайтных чисел
007A   287F           00238              goto         d2              ;при отрицательном результате происходит выход из подпрограммы
007B   3001           00239              movlw        .1              ;при положительном результате инкрементируем счетчик вычитаний
007C   02A2           00240              subwf        dlit2_h,F         ;rezLL, rezLH
007D   1C03           00241              btfss        STATUS,C        ;
007E   2884           00242                          goto             d3                     ;          
007F   0831           00243 d2           movf         del_h,W         ;
0080   02A2           00244              subwf        dlit2_h,F         ;
0081   1C03           00245              btfss        STATUS,C        ;
MPASM  5.51                           EXO.ASM   5-26-2020  15:23:18         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0082   2884           00246                          goto             d3
0083   2889           00247                          goto             inc                                    ;
0084   3001           00248 d3                       movlw        .1
Message[305]: Using default destination of 1 (file).
0085   02A8           00249                          subwf            dlit2_hh
0086   1C03           00250              btfss        STATUS,C        ;
0087   288D           00251              goto delSot
0088   2889           00252                          goto inc
                      00253                          ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0089   0FA9           00254 inc          incfsz       Rez_LL,F         ;инкремент rezLL с проверкой на переполнение      
008A   2873           00255              goto         d1              ;нет переполнения rezLL: переход на метку d1
008B   0AB0           00256              incf         Rez_LH,F         ;переполнение rezLL: инкремент регистра rezLH (регистры rezLL
                            , rezLH  
                      00257                                           ;выступают в качестве счетчика вычитания и содержат результат 
                            деления)
008C   2873           00258              goto         d1              ;переход на метку d1 для повторного вычитания, операция делени
                            я
                      00259                                           ;представляет собой многократное вычитание                    
                                                 ;
                      00260 ;========= результат о глубине находится в Rez_H и Rez_L - целая часть и 
                      00261 ;========= Drob_H Drob_L - дробная часть
                      00262 
                      00263 
                      00264 ;====================  Разделение сотой, десятой и един. ================
008D                  00265 delSot           
                      00266                 
008D   3064           00267                         movlw           .100
008E   00B8           00268                         movwf       del_100
008F   300A           00269                         movlw            .10
0090   00B9           00270                         movwf       del_10
0091   01C4           00271                         clrf Sot  
0092   01B6           00272                         clrf         Edin           ;очистка регистра rezLL (эквивалентно записи нуля)
0093   01B5           00273             clrf                  Dec    
0094   0829           00274 d12                      movf Rez_LL,W
0095   00C6           00275                          movwf Prom_l                    
0096   0830           00276                          movf Rez_LH,W
0097   00C5           00277                          movwf Prom_h                                    
0098   0838           00278                          movf         del_100,W         ;число в tmpLL не равно нулю: вычитаем число леж
                            ащее в регистре
0099   02A9           00279              subwf        Rez_LL,F         ;tmpLL из числа в регистрах varLH, varLL: это операция вычита
                            ния
009A   1803           00280              btfsc        STATUS,C        ;однобайтного числа из двухбайтного
009B   28A0           00281              goto         d22              ;при отрицательном результате происходит выход из подпрограмм
                            ы
009C   3001           00282              movlw        .1              ;при положительном результате инкрементируем счетчик вычитаний
009D   02B0           00283              subwf        Rez_LH,F         ;переходя на метку d2
009E   1C03           00284              btfss        STATUS,C        ;
009F   28A4           00285              goto delDec                       ;
                      00286                                           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            ;;;;;
00A0   0FC4           00287 d22          incfsz       Sot,F         ;инкремент rezLL с проверкой на переполнение      
00A1   2894           00288              goto         d12              ;нет переполнения rezLL: переход на метку d1
00A2   0ABA           00289              incf         Sot_h,F         ;переполнение rezLL: инкремент регистра rezLH (регистры rezLL,
MPASM  5.51                           EXO.ASM   5-26-2020  15:23:18         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                             rezLH  
                      00290                                           ;выступают в качестве счетчика вычитания и содержат результат 
                            деления)
00A3   2894           00291              goto         d12              ;переход на метку d1 для повторного вычитания, операция делен
                            ия
                      00292                                           ;представляет собой многократное вычитание    
                      00293 
00A4   01B6           00294 delDec           clrf         Edin           ;очистка регистра rezLL (эквивалентно записи нуля)
00A5   01B5           00295              clrf                 Dec
                      00296                          
                      00297                                              
00A6   0846           00298 dec1         movf                 Prom_l, W
00A7   00B6           00299                          movwf            Edin
00A8   0839           00300                          movf         del_10,W         ;число в tmpLL не равно нулю: вычитаем число лежа
                            щее в регистре
00A9   02C6           00301              subwf        Prom_l,F         ;tmpLL из числа в регистре varLL
00AA   1C03           00302              btfss        STATUS,C        ;проверка на факт заема
00AB   0008           00303              return                       ;возник факт заема: выход из подпрограммы
00AC   0AB5           00304              incf         Dec,F         ;нет заема: инкремент регистра rezLL (регистр rezLL выступает в
                      00305                                           ;качестве счетчика вычитания и содержит результат деления)    
                              
00AD   28A6           00306              goto         dec1              ;переход на метку d1 для повторного вычитания, операция деле
                            ния
                      00307                                           ;представляет собой многократное вычитание
                      00308 
                      00309 ;=================== Вывод Sot Dec Edin ========================
                      00310 
                      00311 
                      00312 
00AE   2814           00313     goto MAIN
                      00314 
                      00315         end;
MPASM  5.51                           EXO.ASM   5-26-2020  15:23:18         PAGE  8


SYMBOL TABLE
  LABEL                             VALUE 

ADDEN                             00000003
ADEN                              00000003
BRGH                              00000002
BitZ                              00000024
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CIS                               00000003
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000001F
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
DATA_CP_OFF                       00003FFF
DATA_CP_ON                        00003EFF
DC                                00000001
Dec                               00000035
Drob_H                            00000033
Drob_L                            00000032
EEADR                             0000009B
EECON1                            0000009C
EECON2                            0000009D
EEDATA                            0000009A
EEIE                              00000007
EEIF                              00000007
Edin                              00000036
F                                 00000001
FERR                              00000002
FSR                               00000004
Flag                              00000025
GIE                               00000007
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
MPASM  5.51                           EXO.ASM   5-26-2020  15:23:18         PAGE  9


SYMBOL TABLE
  LABEL                             VALUE 

IRP                               00000007
MAIN                              00000014
Mnoj                              00000026
NOT_BO                            00000000
NOT_BOD                           00000000
NOT_BOR                           00000000
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
OERR                              00000001
OPTION_REG                        00000081
OSCF                              00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PIE1                              0000008C
PIR1                              0000000C
PORTA                             00000005
PORTB                             00000006
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
Prom_h                            00000045
Prom_l                            00000046
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RP0                               00000005
MPASM  5.51                           EXO.ASM   5-26-2020  15:23:18         PAGE 10


SYMBOL TABLE
  LABEL                             VALUE 

RP1                               00000006
RX9                               00000006
RX9D                              00000000
Rez_LH                            00000030
Rez_LL                            00000029
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
STATUS                            00000003
SYNC                              00000004
Sot                               00000044
Sot_h                             0000003A
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
MPASM  5.51                           EXO.ASM   5-26-2020  15:23:18         PAGE 11


SYMBOL TABLE
  LABEL                             VALUE 

TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRMT                              00000001
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             0000009F
VREN                              00000007
VROE                              00000006
VRR                               00000005
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
WRITE_1                           0000000D
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_DEVID1                           00002006
_ER_OSC_CLKOUT                    00003FFF
_ER_OSC_NOCLKOUT                  00003FFE
_EXTCLK_OSC                       00003FEF
_FOSC_ECIO                        00003FEF
_FOSC_EXTRCCLK                    00003FFF
_FOSC_EXTRCIO                     00003FFE
_FOSC_HS                          00003FEE
_FOSC_INTOSCCLK                   00003FFD
_FOSC_INTOSCIO                    00003FFC
_FOSC_LP                          00003FEC
_FOSC_XT                          00003FED
_HS_OSC                           00003FEE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
MPASM  5.51                           EXO.ASM   5-26-2020  15:23:18         PAGE 12


SYMBOL TABLE
  LABEL                             VALUE 

_IDLOC3                           00002003
_INTOSC_OSC_CLKOUT                00003FFD
_INTOSC_OSC_NOCLKOUT              00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FEC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC_CLKOUT                    00003FFF
_RC_OSC_NOCLKOUT                  00003FFE
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FED
__16F628A                         00000001
__DEBUG                           1
a1                                0000004F
a2                                00000066
a3                                0000005A
a4                                00000057
a5                                00000061
axb                               00000046
d1                                00000073
d12                               00000094
d2                                0000007F
d22                               000000A0
d3                                00000084
dec1                              000000A6
del                               00000069
delDec                            000000A4
delSot                            0000008D
del_10                            00000039
del_100                           00000038
del_h                             00000031
del_l                             00000027
dlit1_h                           00000020
dlit1_l                           00000021
dlit2_h                           00000022
dlit2_hh                          00000028
dlit2_l                           00000023
drob                              00000037
inc                               00000089
MPASM  5.51                           EXO.ASM   5-26-2020  15:23:18         PAGE 13


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXX- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   172
Program Memory Words Free:  1876


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     5 reported,     0 suppressed

